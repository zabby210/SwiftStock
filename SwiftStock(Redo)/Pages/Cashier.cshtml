@page
@model SwiftStock.Pages.CashierPageModel
@{
    ViewData["Title"] = "Cashier POS";
    Layout = "_CashierLayout"; // Use the new layout
}

<div class="flex h-screen bg-gray-100">
    <!-- Sidebar Navigation -->
    <nav class="bg-white w-64 shadow-lg rounded-lg p-4">
        <h2 class="text-xl font-bold mb-4">Cashier Dashboard</h2>
        <ul class="space-y-2">
            <li>
                <button onclick="showSection('pos')" class="flex items-center w-full p-2 text-left rounded-lg hover:bg-gray-200">
                    <i class="fas fa-cash-register mr-2"></i> POS
                </button>
            </li>
            <li>
                <button onclick="showSection('inventory')" class="flex items-center w-full p-2 text-left rounded-lg hover:bg-gray-200">
                    <i class="fas fa-box mr-2"></i> Inventory
                </button>
            </li>
            <li>
                <button onclick="showSection('history')" class="flex items-center w-full p-2 text-left rounded-lg hover:bg-gray-200">
                    <i class="fas fa-history mr-2"></i> Transaction History
                </button>
            </li>
            <li>
                <button onclick="window.location.href='/Login';" class="flex items-center w-full p-2 text-left rounded-lg hover:bg-gray-200">
                    <i class="fas fa-sign-out-alt mr-2"></i> Logout
                </button>
            </li>
        </ul>
    </nav>

    <div class="flex-1 p-6">
        <div id="pos" class="section">
            <h2 class="text-2xl font-bold mb-4">Point of Sale</h2>
            <div class="pos-grid">
                <div class="bg-white rounded-lg shadow-md">
                    <div class="p-4 border-b border-gray-200">
                        <div class="flex gap-4">
                            <div class="flex-1">
                                <div class="relative">
                                    <i class="fas fa-search absolute left-3 top-3 text-gray-400"></i>
                                    <input type="text" 
                                           id="product-search"
                                           placeholder="Search products..."
                                           class="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#E31837] focus:border-transparent text-gray-900"
                                           onkeyup="filterProducts()">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="product-grid" id="products-container">
                        <!-- Example product list from inventory -->
                        @foreach (var item in Model.InventoryItems)
                        {
                            <div class="product-item" data-name="@item.Product_Name" style="display: none;">
                                @item.Product_Name - ₱@item.Price
                            </div>
                        }
                        <div class="no-products hidden">No products found.</div>
                    </div>
                </div>

                <div class="cart-section">
                    <h2 class="text-xl font-bold mb-4 text-gray-900">Current Cart</h2>
                    <div class="cart-items" id="cart-items">
                        <!-- Cart items will be displayed here -->
                    </div>
                    <div class="cart-total">
                        <div class="flex justify-between mb-2">
                            <span class="text-gray-900">Subtotal:</span>
                            <span class="text-gray-900" id="subtotal">₱0.00</span>
                        </div>
                        <div class="flex justify-between mb-4">
                            <span class="text-gray-900">Tax (12%):</span>
                            <span class="text-gray-900" id="tax">₱0.00</span>
                        </div>
                        <div class="flex justify-between text-xl font-bold">
                            <span class="text-gray-900">Total:</span>
                            <span class="text-gray-900" id="total">₱0.00</span>
                        </div>
                        <div class="grid grid-cols-2 gap-4 mt-4">
                            <button onclick="clearCart()" class="px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300">
                                Clear Cart
                            </button>
                            <button onclick="processPayment()" class="px-4 py-2 bg-[#E31837] text-white rounded-lg hover:bg-[#E31837]/90">
                                Process Payment
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="inventory" class="section hidden">
            <h2 class="text-2xl font-bold mb-4">Inventory</h2>
            <div class="bg-white rounded-lg shadow-md p-6">
                <div class="mb-4">
                    <input type="text" 
                           id="inventory-search" 
                           placeholder="Search inventory..." 
                           class="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#E31837] focus:border-transparent text-gray-900"
                           onkeyup="filterInventory()">
                </div>
                <div class="overflow-x-auto rounded-lg border border-gray-200">
                    <table class="inventory-table w-full">
                        <thead>
                            <tr class="bg-gray-50">
                                <th class="text-gray-700 font-medium">#</th>
                                <th class="text-gray-700 font-medium">Product Name</th>
                                <th class="text-gray-700 font-medium">Price</th>
                                <th class="text-gray-700 font-medium">Stock</th>
                                <th class="text-gray-700 font-medium">Status</th>
                            </tr>
                        </thead>
                        <tbody id="inventory-table-body">
                            @foreach (var item in Model.InventoryItems)
                            {
                                <tr class="hover:bg-gray-100 transition duration-200 inventory-item" data-name="@item.Product_Name">
                                    <td>@item.Id</td>
                                    <td>@item.Product_Name</td>
                                    <td>₱@item.Price</td>
                                    <td>@item.Stock</td>
                                    <td>@(item.Stock > 0 ? "Available" : "Out of Stock")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div id="history" class="section hidden">
            <h2 class="text-2xl font-bold mb-4">Transaction History</h2>
            <div class="bg-white rounded-lg shadow-md p-6">
                <!-- Transaction history will be implemented here -->
            </div>
        </div>
    </div>
</div>

<style>
    /* Glassmorphism effect */
    body {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
    }
    .bg-white {
        background: rgba(255, 255, 255, 0.8);
        backdrop-filter: blur(10px);
        border-radius: 10px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    }
    .inventory-table {
        width: 100%;
        border-collapse: collapse;
    }
    .inventory-table th, .inventory-table td {
        padding: 12px;
        text-align: left;
        border-bottom: 1px solid #e2e8f0; /* Light gray border */
    }
    .inventory-table th {
        background-color: rgba(255, 255, 255, 0.9); /* Slightly transparent white */
    }
    .inventory-table tr:hover {
        background-color: rgba(229, 231, 235, 0.5); /* Light gray on hover */
    }
    .no-products {
        padding: 12px;
        text-align: center;
        color: gray;
    }
</style>

<script>
    function filterProducts() {
        const searchInput = document.getElementById('product-search').value.toLowerCase();
        const products = document.querySelectorAll('.product-item');
        const noProductsMessage = document.querySelector('.no-products');
        let hasProducts = false;

        // Hide the no products message initially
        noProductsMessage.style.display = 'none';

        // Check if the search input is empty
        if (searchInput.trim() === "") {
            products.forEach(product => {
                product.style.display = 'none'; // Hide all products
            });
            return; // Exit the function if the search bar is empty
        }

        products.forEach(product => {
            const productName = product.getAttribute('data-name').toLowerCase();
            if (productName.includes(searchInput)) {
                product.style.display = 'block'; // Show matching product
                hasProducts = true;
            } else {
                product.style.display = 'none'; // Hide non-matching product
            }
        });

        // Show the "No products found" message if no products match
        if (!hasProducts) {
            noProductsMessage.style.display = 'block';
        }
    }

    function filterInventory() {
        const searchInput = document.getElementById('inventory-search').value.toLowerCase();
        const items = document.querySelectorAll('.inventory-item');
        let hasItems = false;

        items.forEach(item => {
            const itemName = item.getAttribute('data-name').toLowerCase();
            if (itemName.includes(searchInput)) {
                item.style.display = 'table-row'; // Show matching item
                hasItems = true;
            } else {
                item.style.display = 'none'; // Hide non-matching item
            }
        });

        // Optionally, you can show a message if no items match
        if (!hasItems) {
            // Handle "No items found" message if needed
        }
    }
</script>