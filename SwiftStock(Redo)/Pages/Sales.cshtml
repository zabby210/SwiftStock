@page
@model AlfaMart.Pages.SalesModel
@{
    ViewData["Title"] = "Sales";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sales</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link href="~/css/main.css" rel="stylesheet" />
    <link href="~/css/styles.css" rel="stylesheet" />
</head>
<body class="bg-gray-900 text-white">

    <header class="flex justify-between items-center p-4 bg-red-600">
        <div class="logo text-2xl font-bold">SwiftStock</div>
        <nav>
            <a href="/" class="text-white hover:text-yellow-300">Home</a>
        </nav>
    </header>

    <main class="flex flex-col items-center justify-center h-screen">
        <h2 class="text-3xl mb-4">Sales</h2>
        <canvas id="salesChart" width="400" height="200"></canvas>
    </main>

    @section Scripts {
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script>
            var salesData = @Html.Raw(Json.Serialize(Model.Sales.Select(s => new { s.InventoryItem.Product_Name, s.Quantity })));

            // Log salesData to the console for debugging
            console.log(salesData);

            // If no sales data, provide default values
            if (salesData.length === 0) {
                salesData = [{ Product_Name: 'No Data', Quantity: 0 }];
            }

            var ctx = document.getElementById('salesChart').getContext('2d');
            var chart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: salesData.map(s => s.Product_Name),
                    datasets: [{
                        label: 'Sales Quantity',
                        data: salesData.map(s => s.Quantity),
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        </script>
    }

</body>
</html>
